class Rules:
    # Los símbolos semánticos se añaden a las reglas. Éstas son llamadas por el parser, pero son obviadas por el parsing table.
    def __init__(self):
        self.rules = {
            0: ['#crearTSG','WORLDNAME', '<id>', 'COLON', '<programa>', '#eliminarTSG'],
            1: ['IDENTIFIER', '<acceso>'],
            2: ['<seccion_de_constantes>', '<seccion_de_tipos>', '<seccion_de_variables>', '<seccion_de_prototipos>', '<seccion_de_rutinas>', '<punto_entrada_del_programa>', 'WORLDSAVE'],
            3: ['#const1','BEDROCK', '<constantes>','#const2'],
            4: [],
            5: ['<constante>', '<constantes>'],
            6: [],
            7: ['OBSIDIAN','#type1', '<tipo>', '#const3', '<id>', '<literal>'],
            8: ['RESOURCEPACK', '<tipos>'],
            9: [],
            10: ['ANVIL', '<id>', 'ARROW', '<tipo>', 'SEMICOLON', '<tipos>'],
            11: [],
            12: ['INVENTORY', '<variables>'],
            13: [],
            14: ['<variable>', '<variables>'],
            15: [],
            16: ['<tipo>', '<expresion>'],
            17: ['RECIPE', '<prototipos>'],
            18: [],
            19: ['<prototipo>', '<prototipos>'],
            20: [],
            21: ['SPELL', '<id>', 'OPENPARENTHESIS', '<parametros>', 'CLOSEPARENTHESIS', 'ARROW', '<tipo>'],
            22: ['#rit1', 'RITUAL', '<id>', 'OPENPARENTHESIS', '<parametros>', 'CLOSEPARENTHESIS', 'SEMICOLON'],
            23: ['CRAFTINGTABLE', '<rutinas>'],
            24: [],
            25: ['<rutina>', '<rutinas>'],
            26: [],
            27: ['SPELL', '<id>', 'OPENPARENTHESIS', '<parametros>', 'CLOSEPARENTHESIS', '<cuerpo_funcion>', 'SEMICOLON'],
            28: ['#rit1', 'RITUAL', '<id>', 'OPENPARENTHESIS', '<parametros>', 'CLOSEPARENTHESIS', '<cuerpo_rutina>', 'SEMICOLON'],
            29: ['SPAWNPOINT', '<cuerpo_rutina>', 'SEMICOLON'],
            30: ['STACK'],
            31: ['RUNE'],
            32: ['SPIDER'],
            33: ['TORCH'],
            34: ['GHAST'],
            35: ['CHAR'],
            36: ['INTEGER'],
            37: ['FLOAT'],
            38: ['ON'],
            39: ['OFF'],
            40: ['STRING', '<acceso>'],
            41: ['OPENSQUAREBRACKET', '<literal>', 'CLOSESQUAREBRACKET'],
            42: [],
            43: ['<literal_o_variable>'],
            44: [],
            45: ['<literal>', '<mas_parametros>'],
            46: ['<id>', '<mas_parametros>'],
            47: ['COMMA', '<literal_o_variable>'],
            48: [],
            49: ['<secciones>', '#crearTSL', 'POLLOCRUDO', '<inst_exp>', '<return_rutina>', 'POLLOASADO', '#rit2', '#eliminarTSL'],
            50: [],
            51: ['<secciones>', 'POLLOCRUDO', '<inst_exp>', '<return>', 'POLLOASADO'],
            52: [],
            53: ['<return>'],
            54: [],
            55: ['RESPAWN'],
            56: ['<seccion_de_constantes>', '<seccion_de_tipos>', '<seccion_de_variables>'],
            57: ['<expresion>', '<inst_exp>'],
            58: ['<instruccion>', '<inst_exp>'],
            59: [],
            60: ['<while>'],
            61: ['<if>'],
            62: ['<switch>'],
            63: ['<repeat>'],
            64: ['<for>'],
            65: ['<break>'],
            66: ['<halt>'],
            67: ['<continue>'],
            68: ['ENDERPEARL'],
            69: ['REPEATER', '<condicion>', 'CRAFT', '<inst_exp_o_bloque>'],
            70: ['TARGET', '<condicion>', 'CRAFT', '<cuerpo_if>'],
            71: ['HIT', '<inst_exp_o_bloque>', 'MISS', '<inst_exp_o_bloque>'],
            72: ['JUKEBOX', '<condicion>', 'CRAFT', '<cuerpo_switch>'],
            73: ['<cases>', '<silence>'],
            74: ['<case>', '<cases>'],
            75: [],
            76: ['DISC', '<literal>', 'COLON', '<inst_exp>', 'COMMA', '<break>', 'SEMICOLON'],
            77: ['SILENCE', 'COLON', '<inst_exp>', 'COMMA', '<break>', 'SEMICOLON'],
            78: ['SPAWNER', '<inst_exp>', 'EXHAUSTED', '<condicion>'],
            79: ['WALK', '<index>', '<step>', 'CRAFT', '<inst_exp_o_bloque>'],
            80: ['<id>', 'SET', '<literal>', 'TO', '<literal>'],
            81: ['STEP', '<literal>'],
            82: ['CREEPER'],
            83: ['RAGEQUIT'],
            84: ['<expresion>'],
            85: ['<instruccion>'],
            86: ['<expresion>'],
            87: ['POLLOCRUDO', '<cuerpo_bloque_inst>', 'POLLOASADO'],
            88: ['<instruccion>', '<inst_exp>'],
            89: ['<expresion>', '<inst_exp>'],
            90: ['<asignacion>', 'SEMICOLON'],
            91: ['<e_asignado>', '<op_assignacion>', '<or>'],
            92: ['<or>'],
            93: ['<id>'],
            94: ['EQUAL'],
            95: ['PLUS_EQUAL'],
            96: ['MINUS_EQUAL'],
            97: ['MULTIPLY_EQUAL'],
            98: ['DIVIDE_EQUAL'],
            99: ['MODULE_EQUAL'],
            100: ['<xor>', '<or_logico>'],
            101: ['OR', '<xor>', '<or_logico>'],
            102: [],
            103: ['<and>', '<xor_logico>'],
            104: ['XOR', '<and>', '<xor_logico>'],
            105: [],
            106: ['<igualdad>', '<and_logico>'],
            107: ['AND', '<igualdad>', '<and_logico>'],
            108: [],
            109: ['<desigualdad>', '<cmp_igualdad>'],
            110: ['IS', '<desigualdad>', '<cmp_igualdad>'],
            111: ['ISNOT', '<desigualdad>', '<cmp_igualdad>'],
            112: [],
            113: ['<dividir_string>', '<cmp_desigual>'],
            114: ['MORETHAN', '<dividir_string>', '<cmp_desigual>'],
            115: ['MOREEQUAL', '<dividir_string>', '<cmp_desigual>'],
            116: ['LESSTHAN', '<dividir_string>', '<cmp_desigual>'],
            117: ['LESSEQUAL', '<dividir_string>', '<cmp_desigual>'],
            118: [],
            119: ['<unir_intersec_string>', '<op_string>'],
            120: ['FROM', '<literal>', '<literal>', 'DOUBLEPOUNDKEY', '<literal>', '<unir_intersec_string>', '<op_string>'],
            121: ['EXCEPT', '<literal>', '<literal>', 'DOUBLEPOUNDKEY', '<literal>', '<unir_intersec_string>', '<op_string>'],
            122: [],
            123: ['<op_lineal>', '<op_union_interec>'],
            124: ['BIND', '<op_lineal>', '<op_union_interec>'],
            125: ['SEEK'],
            126: [],
            127: ['<termino>', '<suma_resta>'],
            128: ['INT_SUM', '<termino>', '<suma_resta>'],
            129: ['INT_MIN', '<termino>', '<suma_resta>'],
            130: ['FLOAT_SUM', '<termino>', '<suma_resta>'],
            131: ['FLOAT_MIN', '<termino>', '<suma_resta>'],
            132: [],
            133: ['<factor>', '<sub_termino>'],
            134: ['INT_MULT', '<factor>', '<sub_termino>'],
            135: ['INT_DIV', '<factor>', '<sub_termino>'],
            136: ['INT_MOD', '<factor>', '<sub_termino>'],
            137: ['FLOAT_MULT', '<factor>', '<sub_termino>'],
            138: ['FLOAT_DIV', '<factor>', '<sub_termino>'],
            139: ['FLOAT_MOD', '<factor>', '<sub_termino>'],
            140: [],
            141: ['<op_unaria>', '<sub_factor>'],
            142: ['<literal>'],
            143: ['<id>'],
            144: ['OPENPARENTHESIS', '<expresion>', 'CLOSEPARENTHESIS'],
            145: ['ISENGRAVED'],
            146: ['ISINSCRIBED'],
            147: ['NOT'],
            148: ['SOULSAND'],
            149: ['MAGMA'],
            150: ['CAST'],
            151: ['CHUNK'],
            152: ['POUNDKEY'],
            153: ['ETCHUP'],
            154: ['ETCHDOWN'],
            155: []
            }
        
    def getRules(self):
        return self.rules
